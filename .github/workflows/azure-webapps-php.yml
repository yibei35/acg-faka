#当提交推送到默认分支时，此工作流将构建PHP应用程序并将其推送到Azure Web App。
#
#此工作流假定您已经创建了目标Azure应用服务Web应用。
#有关说明，请参阅https://docs.microsoft.com/en-us/azure/app-service/quickstart-php?pivots=platform-linux
#
#配置此工作流：
#
#1。下载Azure Web App的发布配置文件。您可以从Azure门户网站中Web App的“概述”页下载此文件。
#有关详细信息：https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
#2.在存储库中创建名为AZURE_webapp_PUBLISH_PROFILE的密码，将发布配置文件内容粘贴为密码的值。
#有关获取发布配置文件的说明，请参阅：https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
#3.更改AZURE_webapp_NAME的值。(可选)更改下面的AZURE_webapp_PACKAGE_PATH和PHP_VERSION环境变量。
#
#有关Azure的GitHub操作的详细信息：https://github.com/Azure/Actions
#有关Azure Web Apps部署操作的详细信息：https://github.com/Azure/webapps-deploy
#要获得更多示例，以开始使用要部署到Azure的GitHub操作工作流：https://github.com/Azure/actions-workflow-samples

姓名:将PHP应用程序构建并部署到Azure Web应用程序

在……之上:
推:
分支机构:[ "主要" ]
workflow_dispatch:

env:
Azure_webapp_NAME:您的应用程序名称#将此设置为应用程序的名称
Azure_webapp_PACKAGE_PATH:'.'      #将此设置为Web应用程序项目的路径，默认设置为存储库根目录
PHP_VERSION:'8.x'                  #将此设置为要使用的PHP版本

权限:
内容:读

工作:
建立:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@7c0b4c8c8ebed23eca9ec2802474895d105b11bc
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@87d74d4732ddb824259d80c8a508c0124bf1c673
        with:
          files: 'composer.json'

      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
